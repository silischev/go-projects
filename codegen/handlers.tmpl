// Code generated. DO NOT EDIT.
package {{.Package}}

import (
    "context"
    "log"
    "net/http"
)

{{ $validationStructs := .ValidationStructs }}

{{range $name, $actions := .Structs}}
    func (h *{{$name}}) ServeHTTP(w http.ResponseWriter, r *http.Request) {
        switch r.URL.Path {
        {{range $action := $actions}}
        case "{{$action.URL}}":
            h.handler{{$action.MethodName}}(w, r)
        {{end}}
        default:
            w.WriteHeader(http.StatusNotFound)
        }
    }
{{end}}

{{range $name, $actions := .Structs}}
    {{range $action := $actions}}
        func (s *{{$name}}) handler{{.MethodName}}(w http.ResponseWriter, r *http.Request) {

            {{if .Auth}}

            {{end}}

            {{$validationStruct := index $validationStructs .ValidationStruct}}
            params := {{getFilledValidationStructure $validationStruct $action}}

            res, err := s.{{.MethodName}}(r.Context(), params)
            if err != nil {
                 w.WriteHeader(http.StatusInternalServerError)
            }
        }
    {{end}}
{{end}}